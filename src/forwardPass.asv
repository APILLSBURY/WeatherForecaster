% Function that performs a forward pass through one layer of the network
% Multiplies inputs by weight (including bias term) and then passes value
% through signal function (in this case hyperbolic tangebt)

% Inputs
% X = m x d matrices
% W = d x l matrix where l is the number of perceptrons in the layer

% Outputs 
% Y = outputs from each perceptron in the layer

function Y = forwardPass(X, W)
    
    Y = zeros(1, 
    for (i = 1:size(W,2))
        %Add the bias feature to the input matrix
        B = features(X);

        %Add an additional value to weights (should this be random?)
        W = features(W);

        %Apply the non-linearity squashing function
        Y = tanh(B * W);
    end
end